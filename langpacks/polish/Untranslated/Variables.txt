[--- Special characters ---\r\n\r\nThe following characters have a special meaning in a formatting string:\r\n\r\n?<function>(<arguments>)\r\nThis will parse the function given the arguments, the result will be parsed again. Example: Today is ?cdate(yyyy/MM/dd).\r\n\r\n!<function>(<arguments>)\r\nThis will parse the function given the arguments, the result will not be parsed again. Example: Message waiting: !message(,first,rcvd,unread).\r\n\r\n%<field>%\r\nThis will parse the given field. Example: I installed Miranda at: %mirandapath%.\r\n\r\n`<string>`\r\nThis will not parse the given string, any function, field or special character in the string will shown in the result without being translated. Example: Use `%mirandapath%` to show the installation path.\r\n\r\n#<comment>\r\nThis will add a comment in the formatting string. Everything from the # character to the end of the line will be removed. Example: %dbprofile% #this is a useless comment.\r\n\r\n\r\n--- Contacts ---\r\n\r\nWhenever a functions requires a contact as an argument, you can specify it in two ways:\r\n\r\n(1) Using a unique id (UIN for ICQ, email for MSN) or, a protocol id followed by a unique id in the form <PROTOID:UNIQUEID>, for example <MSN:miranda@hotmail.com> or <ICQ:123456789>.\r\n\r\n(2) Using the contact function:\r\n?contact(x,y)\r\nA contact will be searched which will have value x for its property y, y can be one of the following:\r\nfirst, last, nick, email, id or display\r\n\r\nFor example: ?contact(miranda@hotmail.com,email) or ?contact(Miranda,nick). The contact function will return either a unique contact according to the arguments or nothing if none or multiple contacts exists with the given property.]
[user defined]
[retrieves info from AMIP (x is var_<variable> with any AMIP variable)]
[retrieves info from AMIP (x is AMIP format string)]
[Boolean FALSE]
[Boolean TRUE]
[x + y + ...]
[username for currently logged-on Windows user]
[zth contact with property y described by x, example: (unregistered,nick) (z is optional)]
[path to the Miranda NG executable]
[TRUE if service function exists]
[(ANSI input only) the number of substring matches found in y with pattern x]
[(ANSI input only) substring match number z found in subject y with pattern x]
[converts each first letter of a word to uppercase, all others to lowercase]
[converts each first letter of a word to uppercase]
[inserts 'end of line' character]
[depends on calling plugin]
[Replace all occurrences of \\n (Unix) by \\r\\n (Windows)]
[cuts x after the first line and appends y (y is optional)]
[replaces all end of line characters by y (y is optional)]
[inserts string y at position z in string x]
[the longest string of the arguments]
[converts x to lowercase]
[no operation, x as given]
[pads x to length y prepending character z (z is optional)]
[pads x to length y appending character z (z is optional)]
[pads x to length y prepending character z, or cut if x is longer (z is optional)]
[pads x to length y appending character z, or cut if x is longer (z is optional)]
[replace all occurrences of y in x with z, multiple y and z arguments allowed]
[moves string x, z characters to the left and trims it to y characters]
[TRUE if x equals any of the following arguments]
[TRUE if the first z characters of x equal y]
[the shortest string of the arguments]
[location of first occurrence of character y in string x]
[location of last occurrence of character y in string x]
[location of first occurrence of string y in x]
[substring of x starting from position y to z]
[the xth string of the arguments]
[z if y equals x, multiple y and z arguments allowed]
[removes white spaces in before and after x]
[inserts x tab characters (x is optional)]
[converts x to upper case]
[words (separated by white spaces) number y to z from string x (z is optional)]
[any environment variable defined in current Windows session (like %systemroot%, %allusersprofile%, etc.)]
[apply stylesheet file x to document file y]
[apply stylesheet x to document y]
